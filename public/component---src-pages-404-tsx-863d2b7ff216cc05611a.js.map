{"version":3,"file":"component---src-pages-404-tsx-863d2b7ff216cc05611a.js","mappings":"mJAmDA,IAxCaA,IACX,MAAM,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAaJ,GAC3CE,YAAaG,EAAgBJ,MAAOK,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,MAE/DC,MAAM,SAAEC,KACNC,EAAAA,EAAAA,MAEEC,EAAM,CACVX,MAAOA,GAASK,EAChBJ,YAAaA,GAAeG,EAC5BQ,IAAI,GAAIN,GAASJ,GAAY,KAG/B,OACEW,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMC,KAAML,IACZI,EAAAA,cAAA,QACEE,IAAI,OACJC,KAAK,oIAEPH,EAAAA,cAAA,aAAQF,EAAIX,OACZa,EAAAA,cAAA,QAAME,IAAI,YAAYC,KAAML,EAAIC,MAChCC,EAAAA,cAAA,QAAMI,KAAK,cAAcC,QAASP,EAAIV,cAEtCY,EAAAA,cAAA,QAAMM,SAAS,WAAWD,QAASP,EAAIX,QACvCa,EAAAA,cAAA,QAAMM,SAAS,SAASD,QAASP,EAAIC,MACrCC,EAAAA,cAAA,QAAMM,SAAS,UAAUD,QAAQ,YACjCL,EAAAA,cAAA,QAAMM,SAAS,iBAAiBD,QAASP,EAAIV,cAE7CY,EAAAA,cAAA,QAAMI,KAAK,eAAeC,QAAQ,YAClCL,EAAAA,cAAA,QAAMI,KAAK,gBAAgBC,QAASP,EAAIX,QACxCa,EAAAA,cAAA,QAAMI,KAAK,cAAcC,QAASP,EAAIC,MACtCC,EAAAA,cAAA,QAAMI,KAAK,sBAAsBC,QAASP,EAAIV,cAC9CY,EAAAA,cAAA,QAAMI,KAAK,eAAeC,QAAS,wBACnCL,EAAAA,cAAA,QAAMI,KAAK,kBAAkBC,QAAS,SACrCf,EACA,C,mGCnCP,UAR0CiB,MACxCC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,IAAS,MAAM,GACd,IAEI,MAMF,MAAMC,EAAeA,IACnBV,EAAAA,cAACW,EAAAA,EAAG,CAAOxB,MAAO,a","sources":["webpack://vad-var-site/./src/components/SEO.tsx","webpack://vad-var-site/./src/pages/404.tsx"],"sourcesContent":["import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useSiteMetadata from '@hooks/useSiteMetaData';\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nconst SEO = (props: SEOProps) => {\n  const { title, description, pathname, children } = props;\n  const { description: defDescription, title: defTitle, origin } = useSiteMetadata();\n  const {\n    i18n: { language }\n  } = useTranslation();\n\n  const seo = {\n    title: title || defTitle,\n    description: description || defDescription,\n    url: `${origin}${pathname || ''}`\n  };\n\n  return (\n    <>\n      <html lang={language} />\n      <link\n        rel='icon'\n        href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ¦º</text></svg>\"\n      />\n      <title>{seo.title}</title>\n      <link rel='canonical' href={seo.url} />\n      <meta name='description' content={seo.description} />\n\n      <meta property='og:title' content={seo.title} />\n      <meta property='og:url' content={seo.url} />\n      <meta property='og:type' content='website' />\n      <meta property='og:description' content={seo.description} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={seo.title} />\n      <meta name='twitter:url' content={seo.url} />\n      <meta name='twitter:description' content={seo.description} />\n      <meta name='twitter:site' content={'https://www.ibm.com'} />\n      <meta name='twitter:creator' content={'@IBM'} />\n      {children}\n    </>\n  );\n};\n\nexport default SEO;\n","import React, { useEffect } from 'react';\nimport { HeadFC, PageProps, navigate } from 'gatsby';\nimport SEO from '../components/SEO';\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  useEffect(() => {\n    navigate('/en');\n  }, []);\n\n  return null;\n};\n\nexport default NotFoundPage;\n\n// SEO\nexport const Head: HeadFC = () => {\n  return <SEO {...{ title: 'Not Found' }} />;\n};\n"],"names":["props","title","description","pathname","children","defDescription","defTitle","origin","useSiteMetadata","i18n","language","useTranslation","seo","url","React","lang","rel","href","name","content","property","NotFoundPage","useEffect","navigate","Head","SEO"],"sourceRoot":""}